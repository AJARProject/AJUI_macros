<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE macros SYSTEM "http://www.4d.com/dtd/2007/macros.dtd" >
<macros>
<macro name="NewAJUI_ButtonText">
	<text>
		C_TEXT($currentBtnName)
		$currentBtnName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)
				Form[$currentBtnName]:=New AJUI_Button
				Form[$currentBtnName].Name($currentBtnName)
				Form[$currentBtnName].OnClick("MyMethod<caret/>";New object("param1";""))
				Form[$currentBtnName].Type("rectangle")
				Form[$currentBtnName].Composition("text")
				Form[$currentBtnName].Label(AJUI_btn_default;"My Message")
		End Case
		Form[$currentBtnName].Draw()
	</text>
</macro>

<macro name="NewAJUI_ButtonPicture">
	<text>
		C_TEXT($currentBtnName)
		$currentBtnName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)
				Form[$currentBtnName]:=New AJUI_Button
				Form[$currentBtnName].Name($currentBtnName)
				Form[$currentBtnName].OnClick("MyMethod<caret/>";New object("param1";""))
				Form[$currentBtnName].Type("rectangle")
				Form[$currentBtnName].Composition("picture")	
				Form.btn1.PicturePath(AJUI_btn_default;"myPicture.png")
		End Case
		Form[$currentBtnName].Draw()
	</text>
</macro>

<macro name="NewAJUI_ButtonFAB">
	<text>
		C_TEXT($currentBtnName)
		$currentBtnName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)
				Form[$currentBtnName]:=New AJUI_Button
				Form[$currentBtnName].Name($currentBtnName)
				Form[$currentBtnName].FABIsMainButton(True)
				Form[$currentBtnName].FABIsAnimated(True)
				Form[$currentBtnName].FABAdd("btn1<caret/>")
				Form[$currentBtnName].FABAdd("btn2")
				Form[$currentBtnName].FABAdd("btn3")
		End Case
		Form[$currentBtnName].Draw()
	</text>
</macro>

<macro name="NewAJUI_ButtonWithTemplate">
	<text>
		C_TEXT($currentBtnName)
		$currentBtnName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)
				C_OBJECT($btnTemplate)
				$btnTemplate:=New object("templateName";<selection/>)
				
				Form[$currentBtnName]:=New AJUI_Button ($btnTemplate)
				Form[$currentBtnName].Name($currentBtnName)
				Form[$currentBtnName].OnClick("MyMethod<caret/>";New object("param1";""))
		End Case
		Form[$currentBtnName].Draw()
	</text>
</macro>

<macro name="AJUI_ButtionQuickPictBtneMethod">
	<text>
		C_OBJECT($0;$newButton_obj)

		$newButton_obj:=New AJUI_Button 
		
		  //global
		$newButton_obj.Type("circle")
		$newButton_obj.Composition("picture")
		
		  //box
		$newButton_obj.Resizable(True)
		$newButton_obj.Height(AJUI_btn_default;30)
		$newButton_obj.Width(AJUI_btn_default;30)
		$newButton_obj.BGColor(AJUI_btn_default;"#4d9ad4")
		$newButton_obj.BGColor(AJUI_btn_hover;"#005EA8")
		$newButton_obj.BGColor(AJUI_btn_active;"white")
		$newButton_obj.BGColor(AJUI_btn_disable;"lightgray")
		$newButton_obj.BGColor(AJUI_btn_focus;"#9fddf9")
		
		  //border
		$newButton_obj.BorderColor(AJUI_btn_default;"#0a509e")
		$newButton_obj.BorderSize(AJUI_btn_default;0)
		
		  //picture
		$newButton_obj.PictureHeight(AJUI_btn_default;15)
		$newButton_obj.PictureWidth(AJUI_btn_default;15)
		$newButton_obj.ColorToReplace(AJUI_btn_default;"#434343")
		$newButton_obj.ReplacingColor(AJUI_btn_default;"white")
		$newButton_obj.ReplacingColor(AJUI_btn_active;"#005EA8")
		$newButton_obj.ReplacingColor(AJUI_btn_disable;"gray")
		
		
		$0:=$newButton_obj
	</text>
</macro>

<macro name="NewAJUI_Breadcrumb">
	<text>
		C_TEXT($currentBCName)
		$currentBCName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)
				Form[$currentBCName]:=New AJUI_BreadCrumb 
				Form[$currentBCName].Name($currentBCName)
				Form[$currentBCName].Model("arrow")
				Form[$currentBCName].AddSection("sect1";New object("label";"MySection1<caret/>";"onClickCB";"MyCallback"))
		End Case
		Form[$currentBCName].Draw()
	</text>
</macro>


<macro name="NewAJUI_BreadcrumbWithTemplate">
	<text>
		C_TEXT($currentBCName)
		$currentBCName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)
				C_OBJECT($bcTemplate)
				$bcTemplate:=New object("templateName";<selection/>)
				
				Form[$currentBCName]:=New AJUI_BreadCrumb ($bcTemplate)
				Form[$currentBCName].Name($currentBCName)
				<caret/>
		End Case
		Form[$currentBCName].Draw()
	</text>
</macro>

<macro name="AJUI_BreadcrumbGroupedBtnFilterExample">
	<text>
		//Example of a grouped button template used as a filter for different currencies (Frs,$;€)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)
				C_OBJECT($bc;$section_obj;$params)
				
				 //info template
				$bc:=New object()
				$bc.templateName:="Currencies"
				$bc.templatePath:=Get 4D folder(Current resources folder)+"Currencies"+Folder separator
				
				 //load template
				Form.CurrBC:=New AJUI_BreadCrumb ($bc)
				Form.CurrBC.Name("CurrBC")
				Form.CurrBC.SetCurrentSection("Frs")
				
				  //add callback
				$section_obj:=New object
				$section_obj.onClickCB:="currencyFilter_cb"
				
				  //Frs
				$params:=New object
				$params.currency:="Frs"
				$section_obj.onClickCBParams:=OB Copy($params)
				Form.CurrBC.UpdateSection("Frs";$section_obj)
				
				  //€
				$params.currency:="€"
				$section_obj.onClickCBParams:=OB Copy($params)
				Form.CurrBC.UpdateSection("€";$section_obj)
				
				  //$
				$params.currency:="$"
				$section_obj.onClickCBParams:=OB Copy($params)
				Form.CurrBC.UpdateSection("$";$section_obj)
		End case 
		
		Form.CurrBC.Draw()
	</text>
</macro>

<macro name="AJUI_BreadcrumbAddSectionFullParams">
	<text>
		C_Object($section)
		
		$section.label:="<caret/>"
		$section.disable:=False
		$section.position:=1
		$section.type:="standard" //standard,first,current,previous,next
		
		//picture
		$section.colorToReplace:=""
		$section.pictureHeight:="40%"
		$section.pictureMargin:=10
		$section.picturePath:=""
		$section.picturePosition:="left"
		
		//callback
		$section.onClickCB:="myMethod1"
		$section.onClickCBParams:=new Object()
		$section.onDoubleClickCB:="myMethod2"
		$section.onDoubleClickCBParams:=new Object()
		
		//add section
		myBC.AddSection("sect1";$section)
	</text>
</macro>

<macro name="AJUI_BreadcrumbUpdateSectionFullParams">
	<text>
		C_Object($section)
		
		$section.label:="<caret/>"
		$section.disable:=False
		$section.position:=1
		$section.type:="standard" //standard,first,current,previous,next
		
		//picture
		$section.colorToReplace:=""
		$section.pictureHeight:="40%"
		$section.pictureMargin:=10
		$section.picturePath:=""
		$section.picturePosition:="left"
		
		//callback
		$section.onClickCB:="myMethod1"
		$section.onClickCBParams:=new Object()
		$section.onDoubleClickCB:="myMethod2"
		$section.onDoubleClickCBParams:=new Object()
		
		//update section
		myBC.UpdateSection("sect1";$section)
	</text>
</macro>

<macro name="AJUI_BreadcrumbDeleteSection">
	<text>
		myBC.RemoveSection("<caret/>sectionID")
	</text>
</macro>

<macro name="NewAJUI_Tip">
	<text>
		C_TEXT($currentTipName)
		$currentTipName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)			
				Form[$currentTipName]:=New AJUI_Tip ($tipTemplate)
				Form[$currentTipName].TargetName($currentTipName)
				Form[$currentTipName].TipPosition("top")
				Form[$currentTipName].BackgroundColor("yellow")
				Form[$currentTipName].TipboxMaxWidth(150)
				Form[$currentTipName].TextLabel("MyMessage<caret/>")
			: ($evt=On Mouse Enter)
				Form[$currentTipName].Show()
			: ($evt=On Mouse Leave)	
				Form[$currentTipName].Hide()
		End Case
	</text>
</macro>

<macro name="NewAJUI_Tip">
	<text>
		C_TEXT($currentTipName)
		$currentTipName:=OBJECT Get name(Object current)
		$evt:=Form event code

		Case of 
			: ($evt=On Load)			
				Form[$currentTipName]:=New AJUI_Tip ($tipTemplate)
				Form[$currentTipName].TargetName($currentTipName)
				Form[$currentTipName].TipPosition("top")
				Form[$currentTipName].BackgroundColor("yellow")
				Form[$currentTipName].TipboxMaxWidth(150)
				Form[$currentTipName].TextLabel("MyMessage<caret/>")
			: ($evt=On Mouse Enter)
				Form[$currentTipName].Show()
			: ($evt=On Mouse Leave)	
				Form[$currentTipName].Hide()
		End Case
	</text>
</macro>

<macro name="AJUI_TipQuickTipMethod">
	<text>
		C_OBJECT($0;$tip_obj)
		C_TEXT($1;$tipTargetName)
		C_TEXT($2;$tipLabel)
		
		
		$tipTargetName:=$1
		$tipLabel:=$2
		
		$tip_obj:=New AJUI_Tip 
		
		  // ----------------------
		  // Global
		  // ----------------------
		$tip_obj.TipName("AJUI_Tip_sf")
		$tip_obj.TipDuration(5000)
		$tip_obj.AutoRebuild(False)
		
		
		  // ----------------------
		  //Text
		  // ----------------------
		$tip_obj.TextLabel($tipLabel)
		$tip_obj.TextRotation("")
		$tip_obj.TextFontSize(13)
		$tip_obj.TextFontName("Arial,Helvetica,MS Sans Serif")
		$tip_obj.TextFontColor("#FFFFFF")
		$tip_obj.TextOpacity(100)
		
		
		  // ----------------------
		  // Target
		  // ----------------------
		$tip_obj.TipPosition("bottom")
		$tip_obj.TargetName($tipTargetName)
		$tip_obj.TargetOffset(0)
		$tip_obj.TargetMargin(0)
		
		
		  // ----------------------
		  // Container
		  // ----------------------
		$tip_obj.CornerRadius(5)
		$tip_obj.TipboxMaxWidth(0)
		$tip_obj.TipboxMaxHeight(0)
		$tip_obj.Padding(10)
		$tip_obj.BorderSize(2)
		$tip_obj.BorderColor("#005EA8")
		$tip_obj.BorderOpacity(100)
		$tip_obj.BackgroundColor("#076BFF")
		$tip_obj.BackgroundOpacity(90)
		$tip_obj.ActivateShadow(False)
		$tip_obj.ShadowOffset(2)
		
		
		  // ----------------------
		  // Arrow
		  // ----------------------
		$tip_obj.ArrowWidth(20)
		$tip_obj.ArrowHeight(10)
		$tip_obj.ArrowPosition("middle")
		$tip_obj.ArrowOffset(10)
		$tip_obj.Curved(True)
		
		$0:=$tip_obj
	</text>
</macro>

<macro name="AJUI_TipFade">
	<text>
		$mytip.TimerFadeIn(1200)
		$mytip.ActivateFadeIn(True)
		$mytip.TipDuration(5000)
		$mytip.TimerFadeOut(1200)
		$mytip.ActivateFadeOut(True)
	</text>
</macro>

<macro name="AJUI_TipJump">
	<text>
		$mytip.JumpNumber(3)
		$mytip.JumpDuration(1000)
		$mytip.JumpOn(50)
		$mytip.JumpOffset(20)
	</text>
</macro>

<macro name="AJUI_TipBlink">
	<text>
		$mytip.BlinkNumber(3)
		$mytip.BlinkDuration(1000)
		$mytip.BlinkOn(50)
	</text>
</macro>

<macro name="NewAJUI_BannerWindow">
	<text>
		$evt:=Form event code
		Case of 
			: ($evt=On Load)	
				Form.myBanner:=New AJUI_Banner 
				Form.myBanner.BannerType("window")
				Form.myBanner.IsPicture(False)
				Form.myBanner.Message("MyMessage")
				Form.myBanner.BannerPosition("bottom-right")
				Form.myBanner.BannerName("myBanner")
			: ($evt=On Clicked)	
				Form.myBanner.DrawBanner()
		End Case
	</text>
</macro>

<macro name="NewAJUI_BannerRibbon">
	<text>
		$evt:=Form event code
		Case of 
			: ($evt=On Load)	
				Form.myBanner:=New AJUI_Banner 
				Form.myBanner.BannerType("cornerRibbon")
				Form.myBanner.BannerName("productAvailable")
				Form.myBanner.Message("In Stock")
				Form.myBanner.BannerPosition("top-right")
				Form.myBanner.RibbonTargetName("productPanel")
				Form.myBanner.BannerHeight(100)
				Form.myBanner.BannerWidth(165)
			: ($evt=On Clicked)	
				Form.myBanner.DrawBanner()
		End Case
	</text>
</macro>

<macro name="NewAJUI_BannerSpinner">
	<text>
		$evt:=Form event code
		Case of 
			: ($evt=On Load)	
				Form.myBanner:=New AJUI_Banner 
				Form.myBanner.BannerHeight(150)
				Form.myBanner.BannerWidth(400)
				Form.myBanner.BannerName("mybanner")
				Form.myBanner.BannerType("spinner")
			: ($evt=On Clicked)	
				Form.myBanner.DrawBanner()
			: ($evt=On Unload)
				Form.myBanner.StopSpinner()
		End Case
	</text>
</macro>

<macro name="NewUnitTest">
	<text>
		C_OBJECT($test)
		$test:=New AJ_Tools_UT_describe ("describe";Current method name;"test category")

		$test.given:="1 + 1"
		$test.should:="return 2"
		$test.expected:=2
		$test.actual:=1+1
		$test.assert()
	</text>
</macro>

<macro name="Wrapper_AJ_Tools_UT_describe">
	<text>
		    // New UnitTest_Describe($1;$2;$3)
   			// With this wrapper method, you can now remove the component when you build an application.

		   C_TEXT($1;$2;$3)
		   C_OBJECT($0)
		   ARRAY TEXT($_list_components;0)
		
		   COMPONENT LIST($_list_components)
		   $pos:=Find in array($_list_components;"AJ_Tools_UnitTest")
		
		   If ($pos>0)
			 Case of
			   : (Count parameters=0)
				EXECUTE METHOD("New AJ_Tools_UT_describe";$0)
		
			   : (Count parameters=1)
				EXECUTE METHOD("New AJ_Tools_UT_describe";$0;$1)
		
			   : (Count parameters=2)
				EXECUTE METHOD("New AJ_Tools_UT_describe";$0;$1;$2)
		
			   : (Count parameters=3)
				EXECUTE METHOD("New AJ_Tools_UT_describe";$0;$1;$2;$3)
			 End case 
   End if
	</text>
</macro>

<macro name="NewAJ_Math">
	<text>
		C_OBJECT($math)

		$math:=Math ()
		$result:=$math.round(5.95) //example
	</text>
</macro>

<macro name="NewAJUI_Animate">
	<text>
		$animation:=New Animation
		$animation.target:="Rectangle"
		$animation.duration:=1000
		$animation.factor:=1
		$animation.offset:=300
		$animation.orientation:="right"
		$animation.hideAtTheEnd:=False
		 //choose effect
		$animation.bounceIn()
	</text>
</macro>

<macro name="NewAJUI_AnimateFloatingLabel">
	<text>
			$evt:=Form event code
			Case of 
				: ($evt=On Load)
					Form.FLabel1:=New Animation 
					Form.FLabel1.target:="firstname_label"
					Form.FLabel1.formPath:="firstName"
					Form.FLabel1.animationType:="elastic"
					Form.FLabel1.duration:=1100
			End case 
			Form.FLabel1.floatingLabel()
	</text>
</macro>

<macro name="NewAJUI_CicularProgressBar">
	<text>
			$evt:=Form event code
			Case of 
				: ($evt=On Load)
				    Form.percent:=0
					Form.mycpb:=New AJUI_CircularProgressBar 
					Form.mycpb.CPBActivateAnimation(True)
					Form.mycpb.CPBPercentValue(Form.percent)
					Form.mycpb.CPBRadiusAutoSize(False)
					Form.mycpb.CPBPictFormObjName("CPB")
					Form.mycpb.LaunchCircularProgressBar()
				: ($evt=On Data Change)
					Form.mypb.CPBPercentValue(Form.percent)
					Form.mypb.LaunchCircularProgressBar()
			End case 
	</text>
</macro>

<macro name="NewAJUI_ProgressBar">
	<text>
			$evt:=Form event code
			Case of 
				: ($evt=On Load)
					Form.percent:=0
					Form.mypb:=New AJUI_ProgressBar 
					Form.mypb.PBActivateAnimation(True)
					Form.mypb.PBPercentValue(Form.percent)
					Form.mypb.PBPictFormObjName("PB")
					Form.mypb.LaunchProgressBar()
				: ($evt=On Data Change)
					Form.mypb.PBPercentValue(Form.percent)
					Form.mypb.LaunchProgressBar()
			End case 
	</text>
</macro>

<macro name="checkTemplateFileExists">
	C_TEXT($1;$0;$templateName;$path;$fullPath)
	C_OBJECT($folder)
	
	$templateName:=$1
	$path:=Get 4D folder(Current resources folder;*)+"<selection/>"+Folder separator
	
	If ($templateName#"")
		$folder:=Folder($path+$templateName+Folder separator;fk platform path)
		If ($folder.exists)
			$fullPath:=$folder.platformPath
		End if 
	End if	
	
	$0:=$path
</macro>

</macros>

